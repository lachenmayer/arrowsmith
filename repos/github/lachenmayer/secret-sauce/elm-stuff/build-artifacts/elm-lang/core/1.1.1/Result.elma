{"path":"","body":{"fixities":[],"aliases":{},"datatypes":{"Result":[["error","value"],[["Ok",[{"tag":"Var","contents":"value"}]],["Err",[{"tag":"Var","contents":"error"}]]]]},"types":{"Ok":{"tag":"Lambda","contents":[{"tag":"Var","contents":"value"},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"error"},{"tag":"Var","contents":"value"}]]}]},"map3":{"tag":"Lambda","contents":[{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"b"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"c"},{"tag":"Var","contents":"value"}]}]}]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"a"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"b"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"c"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"value"}]]}]}]}]}]},"::":{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"Var","contents":"a"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"Var","contents":"a"}]]}]}]},"map4":{"tag":"Lambda","contents":[{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"b"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"c"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"d"},{"tag":"Var","contents":"value"}]}]}]}]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"a"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"b"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"c"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"d"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"value"}]]}]}]}]}]}]},"map5":{"tag":"Lambda","contents":[{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"b"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"c"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"d"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"e"},{"tag":"Var","contents":"value"}]}]}]}]}]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"a"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"b"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"c"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"d"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"e"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"value"}]]}]}]}]}]}]}]},"andThen":{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"a"}]]},{"tag":"Lambda","contents":[{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"b"}]]}]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"b"}]]}]}]},"map":{"tag":"Lambda","contents":[{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},{"tag":"Var","contents":"value"}]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"a"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"value"}]]}]}]},"fromMaybe":{"tag":"Lambda","contents":[{"tag":"Var","contents":"x"},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Maybe"]},"name":"Maybe"}},[{"tag":"Var","contents":"a"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"a"}]]}]}]},"Err":{"tag":"Lambda","contents":[{"tag":"Var","contents":"error"},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"error"},{"tag":"Var","contents":"value"}]]}]},"formatError":{"tag":"Lambda","contents":[{"tag":"Lambda","contents":[{"tag":"Var","contents":"error"},{"tag":"Var","contents":"error'"}]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"error"},{"tag":"Var","contents":"a"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"error'"},{"tag":"Var","contents":"a"}]]}]}]},"map2":{"tag":"Lambda","contents":[{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"b"},{"tag":"Var","contents":"value"}]}]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"a"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"b"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"value"}]]}]}]}]},"toMaybe":{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"a"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Maybe"]},"name":"Maybe"}},[{"tag":"Var","contents":"a"}]]}]}},"program":[{"tag":"None","contents":{"doc":"let Ok : value -> Result.Result error value\n    Ok = \\a -> Ok a\n    Err : error -> Result.Result error value\n    Err = \\a -> Err a\n    map : (a -> value) -> Result.Result x a -> Result.Result x value\n    map = \\func ra -> case ra of\n                        Result.Ok a -> Ok (func a)\n                        Result.Err e -> Err e\n    map2 : (a -> b -> value)\n           -> Result.Result x a -> Result.Result x b -> Result.Result x value\n    map2 = \\func ra rb -> case (ra,rb) of\n                            (Result.Ok a,Result.Ok b) -> Ok (func a b)\n                            (Result.Err x,_) -> Err x\n                            (_,Result.Err x) -> Err x\n    map3 : (a -> b -> c -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x value\n    map3 = \\func ra rb rc -> case (ra,rb,rc) of\n                               (Result.Ok a,Result.Ok b,Result.Ok c) -> Ok (func a b c)\n                               (Result.Err x,_,_) -> Err x\n                               (_,Result.Err x,_) -> Err x\n                               (_,_,Result.Err x) -> Err x\n    map4 : (a -> b -> c -> d -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x value\n    map4 = \\func ra rb rc rd -> case (ra,rb,rc,rd) of\n                                  (Result.Ok a,Result.Ok b,Result.Ok c,Result.Ok d) -> Ok\n                                                                                         (func\n                                                                                            a b c d)\n                                  (Result.Err x,_,_,_) -> Err x\n                                  (_,Result.Err x,_,_) -> Err x\n                                  (_,_,Result.Err x,_) -> Err x\n                                  (_,_,_,Result.Err x) -> Err x\n    map5 : (a -> b -> c -> d -> e -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x e\n           -> Result.Result x value\n    map5 = \\func ra rb rc rd re -> case (ra,rb,rc,rd,re) of\n                                     (Result.Ok a,\n                                      Result.Ok b,\n                                      Result.Ok c,\n                                      Result.Ok d,\n                                      Result.Ok e) -> Ok (func a b c d e)\n                                     (Result.Err x,_,_,_,_) -> Err x\n                                     (_,Result.Err x,_,_,_) -> Err x\n                                     (_,_,Result.Err x,_,_) -> Err x\n                                     (_,_,_,Result.Err x,_) -> Err x\n                                     (_,_,_,_,Result.Err x) -> Err x\n    andThen : Result.Result x a\n              -> (a -> Result.Result x b) -> Result.Result x b\n    andThen = \\result callback -> case result of\n                                    Result.Ok value -> callback value\n                                    Result.Err msg -> Err msg\n    formatError : (error -> error')\n                  -> Result.Result error a -> Result.Result error' a\n    formatError = \\f result -> case result of\n                                 Result.Ok v -> Ok v\n                                 Result.Err e -> Err (f e)\n    toMaybe : Result.Result x a -> Maybe.Maybe a\n    toMaybe = \\result -> case result of\n                           Result.Ok v -> Maybe.Just v\n                           Result.Err _ -> Maybe.Nothing\n    fromMaybe : x -> Maybe.Maybe a -> Result.Result x a\n    fromMaybe = \\err maybe -> case maybe of\n                                Maybe.Just v -> Ok v\n                                Maybe.Nothing -> Err err\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"toMaybe"},[{"tag":"Span","contents":[{"line":158,"column":5},{"line":171,"column":3},{"doc":"case result of\n  Ok v -> Just v\n  Err _ -> Nothing"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"result"},[{"tag":"Span","contents":[{"line":158,"column":5},{"line":171,"column":3},{"doc":"case result of\n  Ok v -> Just v\n  Err _ -> Nothing"}]},{"tag":"Case","contents":[[{"tag":"Span","contents":[{"line":158,"column":10},{"line":158,"column":16},{"doc":"result"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"result"}}],[[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"v"}]]},[{"tag":"Span","contents":[{"line":159,"column":16},{"line":159,"column":22},{"doc":"Just v"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":159,"column":16},{"line":159,"column":20},{"doc":"Just"}]},{"tag":"Var","contents":{"home":{"tag":"Module","contents":["Maybe"]},"name":"Just"}}],[{"tag":"Span","contents":[{"line":159,"column":21},{"line":159,"column":22},{"doc":"v"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"v"}}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Anything","contents":[]}]]},[{"tag":"Span","contents":[{"line":160,"column":16},{"line":160,"column":23},{"doc":"Nothing"}]},{"tag":"Var","contents":{"home":{"tag":"Module","contents":["Maybe"]},"name":"Nothing"}}]]]]}]]}],{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"a"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Maybe"]},"name":"Maybe"}},[{"tag":"Var","contents":"a"}]]}]}]],[{"tag":"None","contents":{"doc":"let Ok : value -> Result.Result error value\n    Ok = \\a -> Ok a\n    Err : error -> Result.Result error value\n    Err = \\a -> Err a\n    map : (a -> value) -> Result.Result x a -> Result.Result x value\n    map = \\func ra -> case ra of\n                        Result.Ok a -> Ok (func a)\n                        Result.Err e -> Err e\n    map2 : (a -> b -> value)\n           -> Result.Result x a -> Result.Result x b -> Result.Result x value\n    map2 = \\func ra rb -> case (ra,rb) of\n                            (Result.Ok a,Result.Ok b) -> Ok (func a b)\n                            (Result.Err x,_) -> Err x\n                            (_,Result.Err x) -> Err x\n    map3 : (a -> b -> c -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x value\n    map3 = \\func ra rb rc -> case (ra,rb,rc) of\n                               (Result.Ok a,Result.Ok b,Result.Ok c) -> Ok (func a b c)\n                               (Result.Err x,_,_) -> Err x\n                               (_,Result.Err x,_) -> Err x\n                               (_,_,Result.Err x) -> Err x\n    map4 : (a -> b -> c -> d -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x value\n    map4 = \\func ra rb rc rd -> case (ra,rb,rc,rd) of\n                                  (Result.Ok a,Result.Ok b,Result.Ok c,Result.Ok d) -> Ok\n                                                                                         (func\n                                                                                            a b c d)\n                                  (Result.Err x,_,_,_) -> Err x\n                                  (_,Result.Err x,_,_) -> Err x\n                                  (_,_,Result.Err x,_) -> Err x\n                                  (_,_,_,Result.Err x) -> Err x\n    map5 : (a -> b -> c -> d -> e -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x e\n           -> Result.Result x value\n    map5 = \\func ra rb rc rd re -> case (ra,rb,rc,rd,re) of\n                                     (Result.Ok a,\n                                      Result.Ok b,\n                                      Result.Ok c,\n                                      Result.Ok d,\n                                      Result.Ok e) -> Ok (func a b c d e)\n                                     (Result.Err x,_,_,_,_) -> Err x\n                                     (_,Result.Err x,_,_,_) -> Err x\n                                     (_,_,Result.Err x,_,_) -> Err x\n                                     (_,_,_,Result.Err x,_) -> Err x\n                                     (_,_,_,_,Result.Err x) -> Err x\n    andThen : Result.Result x a\n              -> (a -> Result.Result x b) -> Result.Result x b\n    andThen = \\result callback -> case result of\n                                    Result.Ok value -> callback value\n                                    Result.Err msg -> Err msg\n    formatError : (error -> error')\n                  -> Result.Result error a -> Result.Result error' a\n    formatError = \\f result -> case result of\n                                 Result.Ok v -> Ok v\n                                 Result.Err e -> Err (f e)\n    toMaybe : Result.Result x a -> Maybe.Maybe a\n    toMaybe = \\result -> case result of\n                           Result.Ok v -> Maybe.Just v\n                           Result.Err _ -> Maybe.Nothing\n    fromMaybe : x -> Maybe.Maybe a -> Result.Result x a\n    fromMaybe = \\err maybe -> case maybe of\n                                Maybe.Just v -> Ok v\n                                Maybe.Nothing -> Err err\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"Err"},[{"tag":"None","contents":{"doc":"Err a"}},{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},[{"tag":"None","contents":{"doc":"Err a"}},{"tag":"Data","contents":["Err",[[{"tag":"None","contents":{"doc":"a"}},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"a"}}]]]}]]}],{"tag":"Lambda","contents":[{"tag":"Var","contents":"error"},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"error"},{"tag":"Var","contents":"value"}]]}]}]],[{"tag":"None","contents":{"doc":"let Ok : value -> Result.Result error value\n    Ok = \\a -> Ok a\n    Err : error -> Result.Result error value\n    Err = \\a -> Err a\n    map : (a -> value) -> Result.Result x a -> Result.Result x value\n    map = \\func ra -> case ra of\n                        Result.Ok a -> Ok (func a)\n                        Result.Err e -> Err e\n    map2 : (a -> b -> value)\n           -> Result.Result x a -> Result.Result x b -> Result.Result x value\n    map2 = \\func ra rb -> case (ra,rb) of\n                            (Result.Ok a,Result.Ok b) -> Ok (func a b)\n                            (Result.Err x,_) -> Err x\n                            (_,Result.Err x) -> Err x\n    map3 : (a -> b -> c -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x value\n    map3 = \\func ra rb rc -> case (ra,rb,rc) of\n                               (Result.Ok a,Result.Ok b,Result.Ok c) -> Ok (func a b c)\n                               (Result.Err x,_,_) -> Err x\n                               (_,Result.Err x,_) -> Err x\n                               (_,_,Result.Err x) -> Err x\n    map4 : (a -> b -> c -> d -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x value\n    map4 = \\func ra rb rc rd -> case (ra,rb,rc,rd) of\n                                  (Result.Ok a,Result.Ok b,Result.Ok c,Result.Ok d) -> Ok\n                                                                                         (func\n                                                                                            a b c d)\n                                  (Result.Err x,_,_,_) -> Err x\n                                  (_,Result.Err x,_,_) -> Err x\n                                  (_,_,Result.Err x,_) -> Err x\n                                  (_,_,_,Result.Err x) -> Err x\n    map5 : (a -> b -> c -> d -> e -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x e\n           -> Result.Result x value\n    map5 = \\func ra rb rc rd re -> case (ra,rb,rc,rd,re) of\n                                     (Result.Ok a,\n                                      Result.Ok b,\n                                      Result.Ok c,\n                                      Result.Ok d,\n                                      Result.Ok e) -> Ok (func a b c d e)\n                                     (Result.Err x,_,_,_,_) -> Err x\n                                     (_,Result.Err x,_,_,_) -> Err x\n                                     (_,_,Result.Err x,_,_) -> Err x\n                                     (_,_,_,Result.Err x,_) -> Err x\n                                     (_,_,_,_,Result.Err x) -> Err x\n    andThen : Result.Result x a\n              -> (a -> Result.Result x b) -> Result.Result x b\n    andThen = \\result callback -> case result of\n                                    Result.Ok value -> callback value\n                                    Result.Err msg -> Err msg\n    formatError : (error -> error')\n                  -> Result.Result error a -> Result.Result error' a\n    formatError = \\f result -> case result of\n                                 Result.Ok v -> Ok v\n                                 Result.Err e -> Err (f e)\n    toMaybe : Result.Result x a -> Maybe.Maybe a\n    toMaybe = \\result -> case result of\n                           Result.Ok v -> Maybe.Just v\n                           Result.Err _ -> Maybe.Nothing\n    fromMaybe : x -> Maybe.Maybe a -> Result.Result x a\n    fromMaybe = \\err maybe -> case maybe of\n                                Maybe.Just v -> Ok v\n                                Maybe.Nothing -> Err err\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"andThen"},[{"tag":"Span","contents":[{"line":120,"column":5},{"line":139,"column":3},{"doc":"case result of\n  Ok value -> callback value\n  Err msg -> Err msg"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"result"},[{"tag":"Span","contents":[{"line":120,"column":5},{"line":139,"column":3},{"doc":"case result of\n  Ok value -> callback value\n  Err msg -> Err msg"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"callback"},[{"tag":"Span","contents":[{"line":120,"column":5},{"line":139,"column":3},{"doc":"case result of\n  Ok value -> callback value\n  Err msg -> Err msg"}]},{"tag":"Case","contents":[[{"tag":"Span","contents":[{"line":120,"column":10},{"line":120,"column":16},{"doc":"result"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"result"}}],[[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"value"}]]},[{"tag":"Span","contents":[{"line":121,"column":19},{"line":121,"column":33},{"doc":"callback value"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":121,"column":19},{"line":121,"column":27},{"doc":"callback"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"callback"}}],[{"tag":"Span","contents":[{"line":121,"column":28},{"line":121,"column":33},{"doc":"value"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"value"}}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"msg"}]]},[{"tag":"Span","contents":[{"line":122,"column":18},{"line":122,"column":25},{"doc":"Err msg"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":122,"column":18},{"line":122,"column":21},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":122,"column":22},{"line":122,"column":25},{"doc":"msg"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"msg"}}]]}]]]]}]]}]]}],{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"a"}]]},{"tag":"Lambda","contents":[{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"b"}]]}]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"b"}]]}]}]}]],[{"tag":"None","contents":{"doc":"let Ok : value -> Result.Result error value\n    Ok = \\a -> Ok a\n    Err : error -> Result.Result error value\n    Err = \\a -> Err a\n    map : (a -> value) -> Result.Result x a -> Result.Result x value\n    map = \\func ra -> case ra of\n                        Result.Ok a -> Ok (func a)\n                        Result.Err e -> Err e\n    map2 : (a -> b -> value)\n           -> Result.Result x a -> Result.Result x b -> Result.Result x value\n    map2 = \\func ra rb -> case (ra,rb) of\n                            (Result.Ok a,Result.Ok b) -> Ok (func a b)\n                            (Result.Err x,_) -> Err x\n                            (_,Result.Err x) -> Err x\n    map3 : (a -> b -> c -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x value\n    map3 = \\func ra rb rc -> case (ra,rb,rc) of\n                               (Result.Ok a,Result.Ok b,Result.Ok c) -> Ok (func a b c)\n                               (Result.Err x,_,_) -> Err x\n                               (_,Result.Err x,_) -> Err x\n                               (_,_,Result.Err x) -> Err x\n    map4 : (a -> b -> c -> d -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x value\n    map4 = \\func ra rb rc rd -> case (ra,rb,rc,rd) of\n                                  (Result.Ok a,Result.Ok b,Result.Ok c,Result.Ok d) -> Ok\n                                                                                         (func\n                                                                                            a b c d)\n                                  (Result.Err x,_,_,_) -> Err x\n                                  (_,Result.Err x,_,_) -> Err x\n                                  (_,_,Result.Err x,_) -> Err x\n                                  (_,_,_,Result.Err x) -> Err x\n    map5 : (a -> b -> c -> d -> e -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x e\n           -> Result.Result x value\n    map5 = \\func ra rb rc rd re -> case (ra,rb,rc,rd,re) of\n                                     (Result.Ok a,\n                                      Result.Ok b,\n                                      Result.Ok c,\n                                      Result.Ok d,\n                                      Result.Ok e) -> Ok (func a b c d e)\n                                     (Result.Err x,_,_,_,_) -> Err x\n                                     (_,Result.Err x,_,_,_) -> Err x\n                                     (_,_,Result.Err x,_,_) -> Err x\n                                     (_,_,_,Result.Err x,_) -> Err x\n                                     (_,_,_,_,Result.Err x) -> Err x\n    andThen : Result.Result x a\n              -> (a -> Result.Result x b) -> Result.Result x b\n    andThen = \\result callback -> case result of\n                                    Result.Ok value -> callback value\n                                    Result.Err msg -> Err msg\n    formatError : (error -> error')\n                  -> Result.Result error a -> Result.Result error' a\n    formatError = \\f result -> case result of\n                                 Result.Ok v -> Ok v\n                                 Result.Err e -> Err (f e)\n    toMaybe : Result.Result x a -> Maybe.Maybe a\n    toMaybe = \\result -> case result of\n                           Result.Ok v -> Maybe.Just v\n                           Result.Err _ -> Maybe.Nothing\n    fromMaybe : x -> Maybe.Maybe a -> Result.Result x a\n    fromMaybe = \\err maybe -> case maybe of\n                                Maybe.Just v -> Ok v\n                                Maybe.Nothing -> Err err\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"Ok"},[{"tag":"None","contents":{"doc":"Ok a"}},{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},[{"tag":"None","contents":{"doc":"Ok a"}},{"tag":"Data","contents":["Ok",[[{"tag":"None","contents":{"doc":"a"}},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"a"}}]]]}]]}],{"tag":"Lambda","contents":[{"tag":"Var","contents":"value"},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"error"},{"tag":"Var","contents":"value"}]]}]}]],[{"tag":"None","contents":{"doc":"let Ok : value -> Result.Result error value\n    Ok = \\a -> Ok a\n    Err : error -> Result.Result error value\n    Err = \\a -> Err a\n    map : (a -> value) -> Result.Result x a -> Result.Result x value\n    map = \\func ra -> case ra of\n                        Result.Ok a -> Ok (func a)\n                        Result.Err e -> Err e\n    map2 : (a -> b -> value)\n           -> Result.Result x a -> Result.Result x b -> Result.Result x value\n    map2 = \\func ra rb -> case (ra,rb) of\n                            (Result.Ok a,Result.Ok b) -> Ok (func a b)\n                            (Result.Err x,_) -> Err x\n                            (_,Result.Err x) -> Err x\n    map3 : (a -> b -> c -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x value\n    map3 = \\func ra rb rc -> case (ra,rb,rc) of\n                               (Result.Ok a,Result.Ok b,Result.Ok c) -> Ok (func a b c)\n                               (Result.Err x,_,_) -> Err x\n                               (_,Result.Err x,_) -> Err x\n                               (_,_,Result.Err x) -> Err x\n    map4 : (a -> b -> c -> d -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x value\n    map4 = \\func ra rb rc rd -> case (ra,rb,rc,rd) of\n                                  (Result.Ok a,Result.Ok b,Result.Ok c,Result.Ok d) -> Ok\n                                                                                         (func\n                                                                                            a b c d)\n                                  (Result.Err x,_,_,_) -> Err x\n                                  (_,Result.Err x,_,_) -> Err x\n                                  (_,_,Result.Err x,_) -> Err x\n                                  (_,_,_,Result.Err x) -> Err x\n    map5 : (a -> b -> c -> d -> e -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x e\n           -> Result.Result x value\n    map5 = \\func ra rb rc rd re -> case (ra,rb,rc,rd,re) of\n                                     (Result.Ok a,\n                                      Result.Ok b,\n                                      Result.Ok c,\n                                      Result.Ok d,\n                                      Result.Ok e) -> Ok (func a b c d e)\n                                     (Result.Err x,_,_,_,_) -> Err x\n                                     (_,Result.Err x,_,_,_) -> Err x\n                                     (_,_,Result.Err x,_,_) -> Err x\n                                     (_,_,_,Result.Err x,_) -> Err x\n                                     (_,_,_,_,Result.Err x) -> Err x\n    andThen : Result.Result x a\n              -> (a -> Result.Result x b) -> Result.Result x b\n    andThen = \\result callback -> case result of\n                                    Result.Ok value -> callback value\n                                    Result.Err msg -> Err msg\n    formatError : (error -> error')\n                  -> Result.Result error a -> Result.Result error' a\n    formatError = \\f result -> case result of\n                                 Result.Ok v -> Ok v\n                                 Result.Err e -> Err (f e)\n    toMaybe : Result.Result x a -> Maybe.Maybe a\n    toMaybe = \\result -> case result of\n                           Result.Ok v -> Maybe.Just v\n                           Result.Err _ -> Maybe.Nothing\n    fromMaybe : x -> Maybe.Maybe a -> Result.Result x a\n    fromMaybe = \\err maybe -> case maybe of\n                                Maybe.Just v -> Ok v\n                                Maybe.Nothing -> Err err\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"map"},[{"tag":"Span","contents":[{"line":35,"column":5},{"line":46,"column":3},{"doc":"case ra of\n  Ok a -> Ok (func a)\n  Err e -> Err e"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"func"},[{"tag":"Span","contents":[{"line":35,"column":5},{"line":46,"column":3},{"doc":"case ra of\n  Ok a -> Ok (func a)\n  Err e -> Err e"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"ra"},[{"tag":"Span","contents":[{"line":35,"column":5},{"line":46,"column":3},{"doc":"case ra of\n  Ok a -> Ok (func a)\n  Err e -> Err e"}]},{"tag":"Case","contents":[[{"tag":"Span","contents":[{"line":35,"column":10},{"line":35,"column":12},{"doc":"ra"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"ra"}}],[[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"a"}]]},[{"tag":"Span","contents":[{"line":36,"column":15},{"line":36,"column":25},{"doc":"Ok (func a)"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":36,"column":15},{"line":36,"column":17},{"doc":"Ok"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Ok"}}],[{"tag":"Span","contents":[{"line":36,"column":19},{"line":36,"column":25},{"doc":"func a"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":36,"column":19},{"line":36,"column":23},{"doc":"func"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"func"}}],[{"tag":"Span","contents":[{"line":36,"column":24},{"line":36,"column":25},{"doc":"a"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"a"}}]]}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"e"}]]},[{"tag":"Span","contents":[{"line":37,"column":16},{"line":37,"column":21},{"doc":"Err e"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":37,"column":16},{"line":37,"column":19},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":37,"column":20},{"line":37,"column":21},{"doc":"e"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"e"}}]]}]]]]}]]}]]}],{"tag":"Lambda","contents":[{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},{"tag":"Var","contents":"value"}]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"a"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"value"}]]}]}]}]],[{"tag":"None","contents":{"doc":"let Ok : value -> Result.Result error value\n    Ok = \\a -> Ok a\n    Err : error -> Result.Result error value\n    Err = \\a -> Err a\n    map : (a -> value) -> Result.Result x a -> Result.Result x value\n    map = \\func ra -> case ra of\n                        Result.Ok a -> Ok (func a)\n                        Result.Err e -> Err e\n    map2 : (a -> b -> value)\n           -> Result.Result x a -> Result.Result x b -> Result.Result x value\n    map2 = \\func ra rb -> case (ra,rb) of\n                            (Result.Ok a,Result.Ok b) -> Ok (func a b)\n                            (Result.Err x,_) -> Err x\n                            (_,Result.Err x) -> Err x\n    map3 : (a -> b -> c -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x value\n    map3 = \\func ra rb rc -> case (ra,rb,rc) of\n                               (Result.Ok a,Result.Ok b,Result.Ok c) -> Ok (func a b c)\n                               (Result.Err x,_,_) -> Err x\n                               (_,Result.Err x,_) -> Err x\n                               (_,_,Result.Err x) -> Err x\n    map4 : (a -> b -> c -> d -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x value\n    map4 = \\func ra rb rc rd -> case (ra,rb,rc,rd) of\n                                  (Result.Ok a,Result.Ok b,Result.Ok c,Result.Ok d) -> Ok\n                                                                                         (func\n                                                                                            a b c d)\n                                  (Result.Err x,_,_,_) -> Err x\n                                  (_,Result.Err x,_,_) -> Err x\n                                  (_,_,Result.Err x,_) -> Err x\n                                  (_,_,_,Result.Err x) -> Err x\n    map5 : (a -> b -> c -> d -> e -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x e\n           -> Result.Result x value\n    map5 = \\func ra rb rc rd re -> case (ra,rb,rc,rd,re) of\n                                     (Result.Ok a,\n                                      Result.Ok b,\n                                      Result.Ok c,\n                                      Result.Ok d,\n                                      Result.Ok e) -> Ok (func a b c d e)\n                                     (Result.Err x,_,_,_,_) -> Err x\n                                     (_,Result.Err x,_,_,_) -> Err x\n                                     (_,_,Result.Err x,_,_) -> Err x\n                                     (_,_,_,Result.Err x,_) -> Err x\n                                     (_,_,_,_,Result.Err x) -> Err x\n    andThen : Result.Result x a\n              -> (a -> Result.Result x b) -> Result.Result x b\n    andThen = \\result callback -> case result of\n                                    Result.Ok value -> callback value\n                                    Result.Err msg -> Err msg\n    formatError : (error -> error')\n                  -> Result.Result error a -> Result.Result error' a\n    formatError = \\f result -> case result of\n                                 Result.Ok v -> Ok v\n                                 Result.Err e -> Err (f e)\n    toMaybe : Result.Result x a -> Maybe.Maybe a\n    toMaybe = \\result -> case result of\n                           Result.Ok v -> Maybe.Just v\n                           Result.Err _ -> Maybe.Nothing\n    fromMaybe : x -> Maybe.Maybe a -> Result.Result x a\n    fromMaybe = \\err maybe -> case maybe of\n                                Maybe.Just v -> Ok v\n                                Maybe.Nothing -> Err err\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"map2"},[{"tag":"Span","contents":[{"line":49,"column":5},{"line":52,"column":26},{"doc":"case (ra,rb) of\n  (Ok a,Ok b) -> Ok (func a b)\n  (Err x,_) -> Err x\n  (_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"func"},[{"tag":"Span","contents":[{"line":49,"column":5},{"line":52,"column":26},{"doc":"case (ra,rb) of\n  (Ok a,Ok b) -> Ok (func a b)\n  (Err x,_) -> Err x\n  (_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"ra"},[{"tag":"Span","contents":[{"line":49,"column":5},{"line":52,"column":26},{"doc":"case (ra,rb) of\n  (Ok a,Ok b) -> Ok (func a b)\n  (Err x,_) -> Err x\n  (_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"rb"},[{"tag":"Span","contents":[{"line":49,"column":5},{"line":52,"column":26},{"doc":"case (ra,rb) of\n  (Ok a,Ok b) -> Ok (func a b)\n  (Err x,_) -> Err x\n  (_,Err x) -> Err x"}]},{"tag":"Case","contents":[[{"tag":"Span","contents":[{"line":49,"column":11},{"line":49,"column":16},{"doc":"(ra,rb)"}]},{"tag":"Data","contents":["_Tuple2",[[{"tag":"Span","contents":[{"line":49,"column":11},{"line":49,"column":13},{"doc":"ra"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"ra"}}],[{"tag":"Span","contents":[{"line":49,"column":14},{"line":49,"column":16},{"doc":"rb"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"rb"}}]]]}],[[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple2"},[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"a"}]]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"b"}]]}]]},[{"tag":"Span","contents":[{"line":50,"column":23},{"line":50,"column":35},{"doc":"Ok (func a b)"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":50,"column":23},{"line":50,"column":25},{"doc":"Ok"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Ok"}}],[{"tag":"Span","contents":[{"line":50,"column":27},{"line":50,"column":35},{"doc":"func a b"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":50,"column":27},{"line":50,"column":33},{"doc":"func a"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":50,"column":27},{"line":50,"column":31},{"doc":"func"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"func"}}],[{"tag":"Span","contents":[{"line":50,"column":32},{"line":50,"column":33},{"doc":"a"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"a"}}]]}],[{"tag":"Span","contents":[{"line":50,"column":34},{"line":50,"column":35},{"doc":"b"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"b"}}]]}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple2"},[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"x"}]]},{"tag":"Anything","contents":[]}]]},[{"tag":"Span","contents":[{"line":51,"column":21},{"line":51,"column":26},{"doc":"Err x"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":51,"column":21},{"line":51,"column":24},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":51,"column":25},{"line":51,"column":26},{"doc":"x"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"x"}}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple2"},[{"tag":"Anything","contents":[]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"x"}]]}]]},[{"tag":"Span","contents":[{"line":52,"column":21},{"line":52,"column":26},{"doc":"Err x"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":52,"column":21},{"line":52,"column":24},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":52,"column":25},{"line":52,"column":26},{"doc":"x"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"x"}}]]}]]]]}]]}]]}]]}],{"tag":"Lambda","contents":[{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"b"},{"tag":"Var","contents":"value"}]}]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"a"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"b"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"value"}]]}]}]}]}]],[{"tag":"None","contents":{"doc":"let Ok : value -> Result.Result error value\n    Ok = \\a -> Ok a\n    Err : error -> Result.Result error value\n    Err = \\a -> Err a\n    map : (a -> value) -> Result.Result x a -> Result.Result x value\n    map = \\func ra -> case ra of\n                        Result.Ok a -> Ok (func a)\n                        Result.Err e -> Err e\n    map2 : (a -> b -> value)\n           -> Result.Result x a -> Result.Result x b -> Result.Result x value\n    map2 = \\func ra rb -> case (ra,rb) of\n                            (Result.Ok a,Result.Ok b) -> Ok (func a b)\n                            (Result.Err x,_) -> Err x\n                            (_,Result.Err x) -> Err x\n    map3 : (a -> b -> c -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x value\n    map3 = \\func ra rb rc -> case (ra,rb,rc) of\n                               (Result.Ok a,Result.Ok b,Result.Ok c) -> Ok (func a b c)\n                               (Result.Err x,_,_) -> Err x\n                               (_,Result.Err x,_) -> Err x\n                               (_,_,Result.Err x) -> Err x\n    map4 : (a -> b -> c -> d -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x value\n    map4 = \\func ra rb rc rd -> case (ra,rb,rc,rd) of\n                                  (Result.Ok a,Result.Ok b,Result.Ok c,Result.Ok d) -> Ok\n                                                                                         (func\n                                                                                            a b c d)\n                                  (Result.Err x,_,_,_) -> Err x\n                                  (_,Result.Err x,_,_) -> Err x\n                                  (_,_,Result.Err x,_) -> Err x\n                                  (_,_,_,Result.Err x) -> Err x\n    map5 : (a -> b -> c -> d -> e -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x e\n           -> Result.Result x value\n    map5 = \\func ra rb rc rd re -> case (ra,rb,rc,rd,re) of\n                                     (Result.Ok a,\n                                      Result.Ok b,\n                                      Result.Ok c,\n                                      Result.Ok d,\n                                      Result.Ok e) -> Ok (func a b c d e)\n                                     (Result.Err x,_,_,_,_) -> Err x\n                                     (_,Result.Err x,_,_,_) -> Err x\n                                     (_,_,Result.Err x,_,_) -> Err x\n                                     (_,_,_,Result.Err x,_) -> Err x\n                                     (_,_,_,_,Result.Err x) -> Err x\n    andThen : Result.Result x a\n              -> (a -> Result.Result x b) -> Result.Result x b\n    andThen = \\result callback -> case result of\n                                    Result.Ok value -> callback value\n                                    Result.Err msg -> Err msg\n    formatError : (error -> error')\n                  -> Result.Result error a -> Result.Result error' a\n    formatError = \\f result -> case result of\n                                 Result.Ok v -> Ok v\n                                 Result.Err e -> Err (f e)\n    toMaybe : Result.Result x a -> Maybe.Maybe a\n    toMaybe = \\result -> case result of\n                           Result.Ok v -> Maybe.Just v\n                           Result.Err _ -> Maybe.Nothing\n    fromMaybe : x -> Maybe.Maybe a -> Result.Result x a\n    fromMaybe = \\err maybe -> case maybe of\n                                Maybe.Just v -> Ok v\n                                Maybe.Nothing -> Err err\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"map3"},[{"tag":"Span","contents":[{"line":57,"column":5},{"line":61,"column":29},{"doc":"case (ra,rb,rc) of\n  (Ok a,Ok b,Ok c) -> Ok (func a b c)\n  (Err x,_,_) -> Err x\n  (_,Err x,_) -> Err x\n  (_,_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"func"},[{"tag":"Span","contents":[{"line":57,"column":5},{"line":61,"column":29},{"doc":"case (ra,rb,rc) of\n  (Ok a,Ok b,Ok c) -> Ok (func a b c)\n  (Err x,_,_) -> Err x\n  (_,Err x,_) -> Err x\n  (_,_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"ra"},[{"tag":"Span","contents":[{"line":57,"column":5},{"line":61,"column":29},{"doc":"case (ra,rb,rc) of\n  (Ok a,Ok b,Ok c) -> Ok (func a b c)\n  (Err x,_,_) -> Err x\n  (_,Err x,_) -> Err x\n  (_,_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"rb"},[{"tag":"Span","contents":[{"line":57,"column":5},{"line":61,"column":29},{"doc":"case (ra,rb,rc) of\n  (Ok a,Ok b,Ok c) -> Ok (func a b c)\n  (Err x,_,_) -> Err x\n  (_,Err x,_) -> Err x\n  (_,_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"rc"},[{"tag":"Span","contents":[{"line":57,"column":5},{"line":61,"column":29},{"doc":"case (ra,rb,rc) of\n  (Ok a,Ok b,Ok c) -> Ok (func a b c)\n  (Err x,_,_) -> Err x\n  (_,Err x,_) -> Err x\n  (_,_,Err x) -> Err x"}]},{"tag":"Case","contents":[[{"tag":"Span","contents":[{"line":57,"column":11},{"line":57,"column":19},{"doc":"(ra,rb,rc)"}]},{"tag":"Data","contents":["_Tuple3",[[{"tag":"Span","contents":[{"line":57,"column":11},{"line":57,"column":13},{"doc":"ra"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"ra"}}],[{"tag":"Span","contents":[{"line":57,"column":14},{"line":57,"column":16},{"doc":"rb"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"rb"}}],[{"tag":"Span","contents":[{"line":57,"column":17},{"line":57,"column":19},{"doc":"rc"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"rc"}}]]]}],[[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple3"},[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"a"}]]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"b"}]]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"c"}]]}]]},[{"tag":"Span","contents":[{"line":58,"column":29},{"line":58,"column":43},{"doc":"Ok (func a b c)"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":58,"column":29},{"line":58,"column":31},{"doc":"Ok"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Ok"}}],[{"tag":"Span","contents":[{"line":58,"column":33},{"line":58,"column":43},{"doc":"func a b c"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":58,"column":33},{"line":58,"column":41},{"doc":"func a b"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":58,"column":33},{"line":58,"column":39},{"doc":"func a"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":58,"column":33},{"line":58,"column":37},{"doc":"func"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"func"}}],[{"tag":"Span","contents":[{"line":58,"column":38},{"line":58,"column":39},{"doc":"a"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"a"}}]]}],[{"tag":"Span","contents":[{"line":58,"column":40},{"line":58,"column":41},{"doc":"b"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"b"}}]]}],[{"tag":"Span","contents":[{"line":58,"column":42},{"line":58,"column":43},{"doc":"c"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"c"}}]]}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple3"},[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"x"}]]},{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]}]]},[{"tag":"Span","contents":[{"line":59,"column":24},{"line":59,"column":29},{"doc":"Err x"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":59,"column":24},{"line":59,"column":27},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":59,"column":28},{"line":59,"column":29},{"doc":"x"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"x"}}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple3"},[{"tag":"Anything","contents":[]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"x"}]]},{"tag":"Anything","contents":[]}]]},[{"tag":"Span","contents":[{"line":60,"column":24},{"line":60,"column":29},{"doc":"Err x"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":60,"column":24},{"line":60,"column":27},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":60,"column":28},{"line":60,"column":29},{"doc":"x"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"x"}}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple3"},[{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"x"}]]}]]},[{"tag":"Span","contents":[{"line":61,"column":24},{"line":61,"column":29},{"doc":"Err x"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":61,"column":24},{"line":61,"column":27},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":61,"column":28},{"line":61,"column":29},{"doc":"x"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"x"}}]]}]]]]}]]}]]}]]}]]}],{"tag":"Lambda","contents":[{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"b"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"c"},{"tag":"Var","contents":"value"}]}]}]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"a"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"b"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"c"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"value"}]]}]}]}]}]}]],[{"tag":"None","contents":{"doc":"let Ok : value -> Result.Result error value\n    Ok = \\a -> Ok a\n    Err : error -> Result.Result error value\n    Err = \\a -> Err a\n    map : (a -> value) -> Result.Result x a -> Result.Result x value\n    map = \\func ra -> case ra of\n                        Result.Ok a -> Ok (func a)\n                        Result.Err e -> Err e\n    map2 : (a -> b -> value)\n           -> Result.Result x a -> Result.Result x b -> Result.Result x value\n    map2 = \\func ra rb -> case (ra,rb) of\n                            (Result.Ok a,Result.Ok b) -> Ok (func a b)\n                            (Result.Err x,_) -> Err x\n                            (_,Result.Err x) -> Err x\n    map3 : (a -> b -> c -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x value\n    map3 = \\func ra rb rc -> case (ra,rb,rc) of\n                               (Result.Ok a,Result.Ok b,Result.Ok c) -> Ok (func a b c)\n                               (Result.Err x,_,_) -> Err x\n                               (_,Result.Err x,_) -> Err x\n                               (_,_,Result.Err x) -> Err x\n    map4 : (a -> b -> c -> d -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x value\n    map4 = \\func ra rb rc rd -> case (ra,rb,rc,rd) of\n                                  (Result.Ok a,Result.Ok b,Result.Ok c,Result.Ok d) -> Ok\n                                                                                         (func\n                                                                                            a b c d)\n                                  (Result.Err x,_,_,_) -> Err x\n                                  (_,Result.Err x,_,_) -> Err x\n                                  (_,_,Result.Err x,_) -> Err x\n                                  (_,_,_,Result.Err x) -> Err x\n    map5 : (a -> b -> c -> d -> e -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x e\n           -> Result.Result x value\n    map5 = \\func ra rb rc rd re -> case (ra,rb,rc,rd,re) of\n                                     (Result.Ok a,\n                                      Result.Ok b,\n                                      Result.Ok c,\n                                      Result.Ok d,\n                                      Result.Ok e) -> Ok (func a b c d e)\n                                     (Result.Err x,_,_,_,_) -> Err x\n                                     (_,Result.Err x,_,_,_) -> Err x\n                                     (_,_,Result.Err x,_,_) -> Err x\n                                     (_,_,_,Result.Err x,_) -> Err x\n                                     (_,_,_,_,Result.Err x) -> Err x\n    andThen : Result.Result x a\n              -> (a -> Result.Result x b) -> Result.Result x b\n    andThen = \\result callback -> case result of\n                                    Result.Ok value -> callback value\n                                    Result.Err msg -> Err msg\n    formatError : (error -> error')\n                  -> Result.Result error a -> Result.Result error' a\n    formatError = \\f result -> case result of\n                                 Result.Ok v -> Ok v\n                                 Result.Err e -> Err (f e)\n    toMaybe : Result.Result x a -> Maybe.Maybe a\n    toMaybe = \\result -> case result of\n                           Result.Ok v -> Maybe.Just v\n                           Result.Err _ -> Maybe.Nothing\n    fromMaybe : x -> Maybe.Maybe a -> Result.Result x a\n    fromMaybe = \\err maybe -> case maybe of\n                                Maybe.Just v -> Ok v\n                                Maybe.Nothing -> Err err\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"map4"},[{"tag":"Span","contents":[{"line":66,"column":5},{"line":71,"column":32},{"doc":"case (ra,rb,rc,rd) of\n  (Ok a,Ok b,Ok c,Ok d) -> Ok (func a b c d)\n  (Err x,_,_,_) -> Err x\n  (_,Err x,_,_) -> Err x\n  (_,_,Err x,_) -> Err x\n  (_,_,_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"func"},[{"tag":"Span","contents":[{"line":66,"column":5},{"line":71,"column":32},{"doc":"case (ra,rb,rc,rd) of\n  (Ok a,Ok b,Ok c,Ok d) -> Ok (func a b c d)\n  (Err x,_,_,_) -> Err x\n  (_,Err x,_,_) -> Err x\n  (_,_,Err x,_) -> Err x\n  (_,_,_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"ra"},[{"tag":"Span","contents":[{"line":66,"column":5},{"line":71,"column":32},{"doc":"case (ra,rb,rc,rd) of\n  (Ok a,Ok b,Ok c,Ok d) -> Ok (func a b c d)\n  (Err x,_,_,_) -> Err x\n  (_,Err x,_,_) -> Err x\n  (_,_,Err x,_) -> Err x\n  (_,_,_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"rb"},[{"tag":"Span","contents":[{"line":66,"column":5},{"line":71,"column":32},{"doc":"case (ra,rb,rc,rd) of\n  (Ok a,Ok b,Ok c,Ok d) -> Ok (func a b c d)\n  (Err x,_,_,_) -> Err x\n  (_,Err x,_,_) -> Err x\n  (_,_,Err x,_) -> Err x\n  (_,_,_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"rc"},[{"tag":"Span","contents":[{"line":66,"column":5},{"line":71,"column":32},{"doc":"case (ra,rb,rc,rd) of\n  (Ok a,Ok b,Ok c,Ok d) -> Ok (func a b c d)\n  (Err x,_,_,_) -> Err x\n  (_,Err x,_,_) -> Err x\n  (_,_,Err x,_) -> Err x\n  (_,_,_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"rd"},[{"tag":"Span","contents":[{"line":66,"column":5},{"line":71,"column":32},{"doc":"case (ra,rb,rc,rd) of\n  (Ok a,Ok b,Ok c,Ok d) -> Ok (func a b c d)\n  (Err x,_,_,_) -> Err x\n  (_,Err x,_,_) -> Err x\n  (_,_,Err x,_) -> Err x\n  (_,_,_,Err x) -> Err x"}]},{"tag":"Case","contents":[[{"tag":"Span","contents":[{"line":66,"column":11},{"line":66,"column":22},{"doc":"(ra,rb,rc,rd)"}]},{"tag":"Data","contents":["_Tuple4",[[{"tag":"Span","contents":[{"line":66,"column":11},{"line":66,"column":13},{"doc":"ra"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"ra"}}],[{"tag":"Span","contents":[{"line":66,"column":14},{"line":66,"column":16},{"doc":"rb"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"rb"}}],[{"tag":"Span","contents":[{"line":66,"column":17},{"line":66,"column":19},{"doc":"rc"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"rc"}}],[{"tag":"Span","contents":[{"line":66,"column":20},{"line":66,"column":22},{"doc":"rd"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"rd"}}]]]}],[[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple4"},[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"a"}]]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"b"}]]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"c"}]]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"d"}]]}]]},[{"tag":"Span","contents":[{"line":67,"column":35},{"line":67,"column":51},{"doc":"Ok (func a b c d)"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":67,"column":35},{"line":67,"column":37},{"doc":"Ok"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Ok"}}],[{"tag":"Span","contents":[{"line":67,"column":39},{"line":67,"column":51},{"doc":"func a b c d"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":67,"column":39},{"line":67,"column":49},{"doc":"func a b c"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":67,"column":39},{"line":67,"column":47},{"doc":"func a b"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":67,"column":39},{"line":67,"column":45},{"doc":"func a"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":67,"column":39},{"line":67,"column":43},{"doc":"func"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"func"}}],[{"tag":"Span","contents":[{"line":67,"column":44},{"line":67,"column":45},{"doc":"a"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"a"}}]]}],[{"tag":"Span","contents":[{"line":67,"column":46},{"line":67,"column":47},{"doc":"b"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"b"}}]]}],[{"tag":"Span","contents":[{"line":67,"column":48},{"line":67,"column":49},{"doc":"c"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"c"}}]]}],[{"tag":"Span","contents":[{"line":67,"column":50},{"line":67,"column":51},{"doc":"d"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"d"}}]]}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple4"},[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"x"}]]},{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]}]]},[{"tag":"Span","contents":[{"line":68,"column":27},{"line":68,"column":32},{"doc":"Err x"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":68,"column":27},{"line":68,"column":30},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":68,"column":31},{"line":68,"column":32},{"doc":"x"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"x"}}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple4"},[{"tag":"Anything","contents":[]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"x"}]]},{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]}]]},[{"tag":"Span","contents":[{"line":69,"column":27},{"line":69,"column":32},{"doc":"Err x"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":69,"column":27},{"line":69,"column":30},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":69,"column":31},{"line":69,"column":32},{"doc":"x"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"x"}}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple4"},[{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"x"}]]},{"tag":"Anything","contents":[]}]]},[{"tag":"Span","contents":[{"line":70,"column":27},{"line":70,"column":32},{"doc":"Err x"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":70,"column":27},{"line":70,"column":30},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":70,"column":31},{"line":70,"column":32},{"doc":"x"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"x"}}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple4"},[{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"x"}]]}]]},[{"tag":"Span","contents":[{"line":71,"column":27},{"line":71,"column":32},{"doc":"Err x"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":71,"column":27},{"line":71,"column":30},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":71,"column":31},{"line":71,"column":32},{"doc":"x"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"x"}}]]}]]]]}]]}]]}]]}]]}]]}],{"tag":"Lambda","contents":[{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"b"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"c"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"d"},{"tag":"Var","contents":"value"}]}]}]}]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"a"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"b"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"c"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"d"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"value"}]]}]}]}]}]}]}]],[{"tag":"None","contents":{"doc":"let Ok : value -> Result.Result error value\n    Ok = \\a -> Ok a\n    Err : error -> Result.Result error value\n    Err = \\a -> Err a\n    map : (a -> value) -> Result.Result x a -> Result.Result x value\n    map = \\func ra -> case ra of\n                        Result.Ok a -> Ok (func a)\n                        Result.Err e -> Err e\n    map2 : (a -> b -> value)\n           -> Result.Result x a -> Result.Result x b -> Result.Result x value\n    map2 = \\func ra rb -> case (ra,rb) of\n                            (Result.Ok a,Result.Ok b) -> Ok (func a b)\n                            (Result.Err x,_) -> Err x\n                            (_,Result.Err x) -> Err x\n    map3 : (a -> b -> c -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x value\n    map3 = \\func ra rb rc -> case (ra,rb,rc) of\n                               (Result.Ok a,Result.Ok b,Result.Ok c) -> Ok (func a b c)\n                               (Result.Err x,_,_) -> Err x\n                               (_,Result.Err x,_) -> Err x\n                               (_,_,Result.Err x) -> Err x\n    map4 : (a -> b -> c -> d -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x value\n    map4 = \\func ra rb rc rd -> case (ra,rb,rc,rd) of\n                                  (Result.Ok a,Result.Ok b,Result.Ok c,Result.Ok d) -> Ok\n                                                                                         (func\n                                                                                            a b c d)\n                                  (Result.Err x,_,_,_) -> Err x\n                                  (_,Result.Err x,_,_) -> Err x\n                                  (_,_,Result.Err x,_) -> Err x\n                                  (_,_,_,Result.Err x) -> Err x\n    map5 : (a -> b -> c -> d -> e -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x e\n           -> Result.Result x value\n    map5 = \\func ra rb rc rd re -> case (ra,rb,rc,rd,re) of\n                                     (Result.Ok a,\n                                      Result.Ok b,\n                                      Result.Ok c,\n                                      Result.Ok d,\n                                      Result.Ok e) -> Ok (func a b c d e)\n                                     (Result.Err x,_,_,_,_) -> Err x\n                                     (_,Result.Err x,_,_,_) -> Err x\n                                     (_,_,Result.Err x,_,_) -> Err x\n                                     (_,_,_,Result.Err x,_) -> Err x\n                                     (_,_,_,_,Result.Err x) -> Err x\n    andThen : Result.Result x a\n              -> (a -> Result.Result x b) -> Result.Result x b\n    andThen = \\result callback -> case result of\n                                    Result.Ok value -> callback value\n                                    Result.Err msg -> Err msg\n    formatError : (error -> error')\n                  -> Result.Result error a -> Result.Result error' a\n    formatError = \\f result -> case result of\n                                 Result.Ok v -> Ok v\n                                 Result.Err e -> Err (f e)\n    toMaybe : Result.Result x a -> Maybe.Maybe a\n    toMaybe = \\result -> case result of\n                           Result.Ok v -> Maybe.Just v\n                           Result.Err _ -> Maybe.Nothing\n    fromMaybe : x -> Maybe.Maybe a -> Result.Result x a\n    fromMaybe = \\err maybe -> case maybe of\n                                Maybe.Just v -> Ok v\n                                Maybe.Nothing -> Err err\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"map5"},[{"tag":"Span","contents":[{"line":76,"column":5},{"line":117,"column":3},{"doc":"case (ra,rb,rc,rd,re) of\n  (Ok a,Ok b,Ok c,Ok d,Ok e) -> Ok (func a b c d e)\n  (Err x,_,_,_,_) -> Err x\n  (_,Err x,_,_,_) -> Err x\n  (_,_,Err x,_,_) -> Err x\n  (_,_,_,Err x,_) -> Err x\n  (_,_,_,_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"func"},[{"tag":"Span","contents":[{"line":76,"column":5},{"line":117,"column":3},{"doc":"case (ra,rb,rc,rd,re) of\n  (Ok a,Ok b,Ok c,Ok d,Ok e) -> Ok (func a b c d e)\n  (Err x,_,_,_,_) -> Err x\n  (_,Err x,_,_,_) -> Err x\n  (_,_,Err x,_,_) -> Err x\n  (_,_,_,Err x,_) -> Err x\n  (_,_,_,_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"ra"},[{"tag":"Span","contents":[{"line":76,"column":5},{"line":117,"column":3},{"doc":"case (ra,rb,rc,rd,re) of\n  (Ok a,Ok b,Ok c,Ok d,Ok e) -> Ok (func a b c d e)\n  (Err x,_,_,_,_) -> Err x\n  (_,Err x,_,_,_) -> Err x\n  (_,_,Err x,_,_) -> Err x\n  (_,_,_,Err x,_) -> Err x\n  (_,_,_,_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"rb"},[{"tag":"Span","contents":[{"line":76,"column":5},{"line":117,"column":3},{"doc":"case (ra,rb,rc,rd,re) of\n  (Ok a,Ok b,Ok c,Ok d,Ok e) -> Ok (func a b c d e)\n  (Err x,_,_,_,_) -> Err x\n  (_,Err x,_,_,_) -> Err x\n  (_,_,Err x,_,_) -> Err x\n  (_,_,_,Err x,_) -> Err x\n  (_,_,_,_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"rc"},[{"tag":"Span","contents":[{"line":76,"column":5},{"line":117,"column":3},{"doc":"case (ra,rb,rc,rd,re) of\n  (Ok a,Ok b,Ok c,Ok d,Ok e) -> Ok (func a b c d e)\n  (Err x,_,_,_,_) -> Err x\n  (_,Err x,_,_,_) -> Err x\n  (_,_,Err x,_,_) -> Err x\n  (_,_,_,Err x,_) -> Err x\n  (_,_,_,_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"rd"},[{"tag":"Span","contents":[{"line":76,"column":5},{"line":117,"column":3},{"doc":"case (ra,rb,rc,rd,re) of\n  (Ok a,Ok b,Ok c,Ok d,Ok e) -> Ok (func a b c d e)\n  (Err x,_,_,_,_) -> Err x\n  (_,Err x,_,_,_) -> Err x\n  (_,_,Err x,_,_) -> Err x\n  (_,_,_,Err x,_) -> Err x\n  (_,_,_,_,Err x) -> Err x"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"re"},[{"tag":"Span","contents":[{"line":76,"column":5},{"line":117,"column":3},{"doc":"case (ra,rb,rc,rd,re) of\n  (Ok a,Ok b,Ok c,Ok d,Ok e) -> Ok (func a b c d e)\n  (Err x,_,_,_,_) -> Err x\n  (_,Err x,_,_,_) -> Err x\n  (_,_,Err x,_,_) -> Err x\n  (_,_,_,Err x,_) -> Err x\n  (_,_,_,_,Err x) -> Err x"}]},{"tag":"Case","contents":[[{"tag":"Span","contents":[{"line":76,"column":11},{"line":76,"column":25},{"doc":"(ra,rb,rc,rd,re)"}]},{"tag":"Data","contents":["_Tuple5",[[{"tag":"Span","contents":[{"line":76,"column":11},{"line":76,"column":13},{"doc":"ra"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"ra"}}],[{"tag":"Span","contents":[{"line":76,"column":14},{"line":76,"column":16},{"doc":"rb"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"rb"}}],[{"tag":"Span","contents":[{"line":76,"column":17},{"line":76,"column":19},{"doc":"rc"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"rc"}}],[{"tag":"Span","contents":[{"line":76,"column":20},{"line":76,"column":22},{"doc":"rd"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"rd"}}],[{"tag":"Span","contents":[{"line":76,"column":23},{"line":76,"column":25},{"doc":"re"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"re"}}]]]}],[[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple5"},[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"a"}]]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"b"}]]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"c"}]]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"d"}]]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"e"}]]}]]},[{"tag":"Span","contents":[{"line":77,"column":41},{"line":77,"column":59},{"doc":"Ok (func a b c d e)"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":77,"column":41},{"line":77,"column":43},{"doc":"Ok"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Ok"}}],[{"tag":"Span","contents":[{"line":77,"column":45},{"line":77,"column":59},{"doc":"func a b c d e"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":77,"column":45},{"line":77,"column":57},{"doc":"func a b c d"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":77,"column":45},{"line":77,"column":55},{"doc":"func a b c"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":77,"column":45},{"line":77,"column":53},{"doc":"func a b"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":77,"column":45},{"line":77,"column":51},{"doc":"func a"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":77,"column":45},{"line":77,"column":49},{"doc":"func"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"func"}}],[{"tag":"Span","contents":[{"line":77,"column":50},{"line":77,"column":51},{"doc":"a"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"a"}}]]}],[{"tag":"Span","contents":[{"line":77,"column":52},{"line":77,"column":53},{"doc":"b"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"b"}}]]}],[{"tag":"Span","contents":[{"line":77,"column":54},{"line":77,"column":55},{"doc":"c"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"c"}}]]}],[{"tag":"Span","contents":[{"line":77,"column":56},{"line":77,"column":57},{"doc":"d"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"d"}}]]}],[{"tag":"Span","contents":[{"line":77,"column":58},{"line":77,"column":59},{"doc":"e"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"e"}}]]}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple5"},[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"x"}]]},{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]}]]},[{"tag":"Span","contents":[{"line":78,"column":30},{"line":78,"column":35},{"doc":"Err x"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":78,"column":30},{"line":78,"column":33},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":78,"column":34},{"line":78,"column":35},{"doc":"x"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"x"}}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple5"},[{"tag":"Anything","contents":[]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"x"}]]},{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]}]]},[{"tag":"Span","contents":[{"line":79,"column":30},{"line":79,"column":35},{"doc":"Err x"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":79,"column":30},{"line":79,"column":33},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":79,"column":34},{"line":79,"column":35},{"doc":"x"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"x"}}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple5"},[{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"x"}]]},{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]}]]},[{"tag":"Span","contents":[{"line":80,"column":30},{"line":80,"column":35},{"doc":"Err x"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":80,"column":30},{"line":80,"column":33},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":80,"column":34},{"line":80,"column":35},{"doc":"x"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"x"}}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple5"},[{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"x"}]]},{"tag":"Anything","contents":[]}]]},[{"tag":"Span","contents":[{"line":81,"column":30},{"line":81,"column":35},{"doc":"Err x"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":81,"column":30},{"line":81,"column":33},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":81,"column":34},{"line":81,"column":35},{"doc":"x"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"x"}}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"BuiltIn","contents":[]},"name":"_Tuple5"},[{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]},{"tag":"Anything","contents":[]},{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"x"}]]}]]},[{"tag":"Span","contents":[{"line":82,"column":30},{"line":82,"column":35},{"doc":"Err x"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":82,"column":30},{"line":82,"column":33},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":82,"column":34},{"line":82,"column":35},{"doc":"x"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"x"}}]]}]]]]}]]}]]}]]}]]}]]}]]}],{"tag":"Lambda","contents":[{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"b"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"c"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"d"},{"tag":"Lambda","contents":[{"tag":"Var","contents":"e"},{"tag":"Var","contents":"value"}]}]}]}]}]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"a"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"b"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"c"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"d"}]]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"e"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"value"}]]}]}]}]}]}]}]}]],[{"tag":"None","contents":{"doc":"let Ok : value -> Result.Result error value\n    Ok = \\a -> Ok a\n    Err : error -> Result.Result error value\n    Err = \\a -> Err a\n    map : (a -> value) -> Result.Result x a -> Result.Result x value\n    map = \\func ra -> case ra of\n                        Result.Ok a -> Ok (func a)\n                        Result.Err e -> Err e\n    map2 : (a -> b -> value)\n           -> Result.Result x a -> Result.Result x b -> Result.Result x value\n    map2 = \\func ra rb -> case (ra,rb) of\n                            (Result.Ok a,Result.Ok b) -> Ok (func a b)\n                            (Result.Err x,_) -> Err x\n                            (_,Result.Err x) -> Err x\n    map3 : (a -> b -> c -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x value\n    map3 = \\func ra rb rc -> case (ra,rb,rc) of\n                               (Result.Ok a,Result.Ok b,Result.Ok c) -> Ok (func a b c)\n                               (Result.Err x,_,_) -> Err x\n                               (_,Result.Err x,_) -> Err x\n                               (_,_,Result.Err x) -> Err x\n    map4 : (a -> b -> c -> d -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x value\n    map4 = \\func ra rb rc rd -> case (ra,rb,rc,rd) of\n                                  (Result.Ok a,Result.Ok b,Result.Ok c,Result.Ok d) -> Ok\n                                                                                         (func\n                                                                                            a b c d)\n                                  (Result.Err x,_,_,_) -> Err x\n                                  (_,Result.Err x,_,_) -> Err x\n                                  (_,_,Result.Err x,_) -> Err x\n                                  (_,_,_,Result.Err x) -> Err x\n    map5 : (a -> b -> c -> d -> e -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x e\n           -> Result.Result x value\n    map5 = \\func ra rb rc rd re -> case (ra,rb,rc,rd,re) of\n                                     (Result.Ok a,\n                                      Result.Ok b,\n                                      Result.Ok c,\n                                      Result.Ok d,\n                                      Result.Ok e) -> Ok (func a b c d e)\n                                     (Result.Err x,_,_,_,_) -> Err x\n                                     (_,Result.Err x,_,_,_) -> Err x\n                                     (_,_,Result.Err x,_,_) -> Err x\n                                     (_,_,_,Result.Err x,_) -> Err x\n                                     (_,_,_,_,Result.Err x) -> Err x\n    andThen : Result.Result x a\n              -> (a -> Result.Result x b) -> Result.Result x b\n    andThen = \\result callback -> case result of\n                                    Result.Ok value -> callback value\n                                    Result.Err msg -> Err msg\n    formatError : (error -> error')\n                  -> Result.Result error a -> Result.Result error' a\n    formatError = \\f result -> case result of\n                                 Result.Ok v -> Ok v\n                                 Result.Err e -> Err (f e)\n    toMaybe : Result.Result x a -> Maybe.Maybe a\n    toMaybe = \\result -> case result of\n                           Result.Ok v -> Maybe.Just v\n                           Result.Err _ -> Maybe.Nothing\n    fromMaybe : x -> Maybe.Maybe a -> Result.Result x a\n    fromMaybe = \\err maybe -> case maybe of\n                                Maybe.Just v -> Ok v\n                                Maybe.Nothing -> Err err\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"formatError"},[{"tag":"Span","contents":[{"line":142,"column":5},{"line":155,"column":3},{"doc":"case result of\n  Ok v -> Ok v\n  Err e -> Err (f e)"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"f"},[{"tag":"Span","contents":[{"line":142,"column":5},{"line":155,"column":3},{"doc":"case result of\n  Ok v -> Ok v\n  Err e -> Err (f e)"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"result"},[{"tag":"Span","contents":[{"line":142,"column":5},{"line":155,"column":3},{"doc":"case result of\n  Ok v -> Ok v\n  Err e -> Err (f e)"}]},{"tag":"Case","contents":[[{"tag":"Span","contents":[{"line":142,"column":10},{"line":142,"column":16},{"doc":"result"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"result"}}],[[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Ok"},[{"tag":"Var","contents":"v"}]]},[{"tag":"Span","contents":[{"line":143,"column":16},{"line":143,"column":20},{"doc":"Ok v"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":143,"column":16},{"line":143,"column":18},{"doc":"Ok"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Ok"}}],[{"tag":"Span","contents":[{"line":143,"column":19},{"line":143,"column":20},{"doc":"v"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"v"}}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Result"]},"name":"Err"},[{"tag":"Var","contents":"e"}]]},[{"tag":"Span","contents":[{"line":144,"column":16},{"line":144,"column":24},{"doc":"Err (f e)"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":144,"column":16},{"line":144,"column":19},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":144,"column":21},{"line":144,"column":24},{"doc":"f e"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":144,"column":21},{"line":144,"column":22},{"doc":"f"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"f"}}],[{"tag":"Span","contents":[{"line":144,"column":23},{"line":144,"column":24},{"doc":"e"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"e"}}]]}]]}]]]]}]]}]]}],{"tag":"Lambda","contents":[{"tag":"Lambda","contents":[{"tag":"Var","contents":"error"},{"tag":"Var","contents":"error'"}]},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"error"},{"tag":"Var","contents":"a"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"error'"},{"tag":"Var","contents":"a"}]]}]}]}]],[{"tag":"None","contents":{"doc":"let Ok : value -> Result.Result error value\n    Ok = \\a -> Ok a\n    Err : error -> Result.Result error value\n    Err = \\a -> Err a\n    map : (a -> value) -> Result.Result x a -> Result.Result x value\n    map = \\func ra -> case ra of\n                        Result.Ok a -> Ok (func a)\n                        Result.Err e -> Err e\n    map2 : (a -> b -> value)\n           -> Result.Result x a -> Result.Result x b -> Result.Result x value\n    map2 = \\func ra rb -> case (ra,rb) of\n                            (Result.Ok a,Result.Ok b) -> Ok (func a b)\n                            (Result.Err x,_) -> Err x\n                            (_,Result.Err x) -> Err x\n    map3 : (a -> b -> c -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x value\n    map3 = \\func ra rb rc -> case (ra,rb,rc) of\n                               (Result.Ok a,Result.Ok b,Result.Ok c) -> Ok (func a b c)\n                               (Result.Err x,_,_) -> Err x\n                               (_,Result.Err x,_) -> Err x\n                               (_,_,Result.Err x) -> Err x\n    map4 : (a -> b -> c -> d -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x value\n    map4 = \\func ra rb rc rd -> case (ra,rb,rc,rd) of\n                                  (Result.Ok a,Result.Ok b,Result.Ok c,Result.Ok d) -> Ok\n                                                                                         (func\n                                                                                            a b c d)\n                                  (Result.Err x,_,_,_) -> Err x\n                                  (_,Result.Err x,_,_) -> Err x\n                                  (_,_,Result.Err x,_) -> Err x\n                                  (_,_,_,Result.Err x) -> Err x\n    map5 : (a -> b -> c -> d -> e -> value)\n           -> Result.Result x a\n           -> Result.Result x b\n           -> Result.Result x c\n           -> Result.Result x d\n           -> Result.Result x e\n           -> Result.Result x value\n    map5 = \\func ra rb rc rd re -> case (ra,rb,rc,rd,re) of\n                                     (Result.Ok a,\n                                      Result.Ok b,\n                                      Result.Ok c,\n                                      Result.Ok d,\n                                      Result.Ok e) -> Ok (func a b c d e)\n                                     (Result.Err x,_,_,_,_) -> Err x\n                                     (_,Result.Err x,_,_,_) -> Err x\n                                     (_,_,Result.Err x,_,_) -> Err x\n                                     (_,_,_,Result.Err x,_) -> Err x\n                                     (_,_,_,_,Result.Err x) -> Err x\n    andThen : Result.Result x a\n              -> (a -> Result.Result x b) -> Result.Result x b\n    andThen = \\result callback -> case result of\n                                    Result.Ok value -> callback value\n                                    Result.Err msg -> Err msg\n    formatError : (error -> error')\n                  -> Result.Result error a -> Result.Result error' a\n    formatError = \\f result -> case result of\n                                 Result.Ok v -> Ok v\n                                 Result.Err e -> Err (f e)\n    toMaybe : Result.Result x a -> Maybe.Maybe a\n    toMaybe = \\result -> case result of\n                           Result.Ok v -> Maybe.Just v\n                           Result.Err _ -> Maybe.Nothing\n    fromMaybe : x -> Maybe.Maybe a -> Result.Result x a\n    fromMaybe = \\err maybe -> case maybe of\n                                Maybe.Just v -> Ok v\n                                Maybe.Nothing -> Err err\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"fromMaybe"},[{"tag":"Span","contents":[{"line":174,"column":5},{"line":176,"column":25},{"doc":"case maybe of\n  Just v -> Ok v\n  Nothing -> Err err"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"err"},[{"tag":"Span","contents":[{"line":174,"column":5},{"line":176,"column":25},{"doc":"case maybe of\n  Just v -> Ok v\n  Nothing -> Err err"}]},{"tag":"Lambda","contents":[{"tag":"Var","contents":"maybe"},[{"tag":"Span","contents":[{"line":174,"column":5},{"line":176,"column":25},{"doc":"case maybe of\n  Just v -> Ok v\n  Nothing -> Err err"}]},{"tag":"Case","contents":[[{"tag":"Span","contents":[{"line":174,"column":10},{"line":174,"column":15},{"doc":"maybe"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"maybe"}}],[[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Maybe"]},"name":"Just"},[{"tag":"Var","contents":"v"}]]},[{"tag":"Span","contents":[{"line":175,"column":18},{"line":175,"column":22},{"doc":"Ok v"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":175,"column":18},{"line":175,"column":20},{"doc":"Ok"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Ok"}}],[{"tag":"Span","contents":[{"line":175,"column":21},{"line":175,"column":22},{"doc":"v"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"v"}}]]}]],[{"tag":"Data","contents":[{"home":{"tag":"Module","contents":["Maybe"]},"name":"Nothing"},[]]},[{"tag":"Span","contents":[{"line":176,"column":18},{"line":176,"column":25},{"doc":"Err err"}]},{"tag":"App","contents":[[{"tag":"Span","contents":[{"line":176,"column":18},{"line":176,"column":21},{"doc":"Err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"Err"}}],[{"tag":"Span","contents":[{"line":176,"column":22},{"line":176,"column":25},{"doc":"err"}]},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"err"}}]]}]]]]}]]}]]}],{"tag":"Lambda","contents":[{"tag":"Var","contents":"x"},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Maybe"]},"name":"Maybe"}},[{"tag":"Var","contents":"a"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Result"]},"name":"Result"}},[{"tag":"Var","contents":"x"},{"tag":"Var","contents":"a"}]]}]}]}]],[{"tag":"None","contents":{"doc":"_save_the_environment!!!"}},{"tag":"Var","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"_save_the_environment!!!"}}]]}]]}]]}]]}]]}]]}]]}]]}]]}]]}]]}],"ports":[]},"imports":[[["Maybe"],{"tag":"Open","contents":{"_explicits":[{"tag":"Union","contents":["Maybe",{"_explicits":["Just","Nothing"],"_open":false}]}],"_open":false}}]],"names":["Result"],"exports":[{"tag":"Union","contents":["Result",{"_explicits":["Ok","Err"],"_open":false}]},{"tag":"Value","contents":"map"},{"tag":"Value","contents":"map2"},{"tag":"Value","contents":"map3"},{"tag":"Value","contents":"map4"},{"tag":"Value","contents":"map5"},{"tag":"Value","contents":"andThen"},{"tag":"Value","contents":"formatError"},{"tag":"Value","contents":"toMaybe"},{"tag":"Value","contents":"fromMaybe"}]}