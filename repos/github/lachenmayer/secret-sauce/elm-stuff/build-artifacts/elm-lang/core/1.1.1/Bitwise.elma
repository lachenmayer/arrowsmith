{"path":"","body":{"fixities":[],"aliases":{},"datatypes":{},"types":{"xor":{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]}]},"::":{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"Var","contents":"a"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"Var","contents":"a"}]]}]}]},"shiftLeft":{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]}]},"and":{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]}]},"complement":{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]},"or":{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]}]},"shiftRight":{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]}]},"shiftRightLogical":{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]}]}},"program":[{"tag":"None","contents":{"doc":"let and : Int -> Int -> Int\n    and = Native.Bitwise.and\n    or : Int -> Int -> Int\n    or = Native.Bitwise.or\n    xor : Int -> Int -> Int\n    xor = Native.Bitwise.xor\n    complement : Int -> Int\n    complement = Native.Bitwise.complement\n    shiftLeft : Int -> Int -> Int\n    shiftLeft = Native.Bitwise.shiftLeft\n    shiftRight : Int -> Int -> Int\n    shiftRight = Native.Bitwise.shiftRightArithmatic\n    shiftRightLogical : Int -> Int -> Int\n    shiftRightLogical = Native.Bitwise.shiftRightLogical\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"shiftRightLogical"},[{"tag":"Span","contents":[{"line":73,"column":28},{"line":73,"column":53},{"doc":"Native.Bitwise.shiftRightLogical"}]},{"tag":"Var","contents":{"home":{"tag":"Module","contents":["Native","Bitwise"]},"name":"shiftRightLogical"}}],{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]}]}]],[{"tag":"None","contents":{"doc":"let and : Int -> Int -> Int\n    and = Native.Bitwise.and\n    or : Int -> Int -> Int\n    or = Native.Bitwise.or\n    xor : Int -> Int -> Int\n    xor = Native.Bitwise.xor\n    complement : Int -> Int\n    complement = Native.Bitwise.complement\n    shiftLeft : Int -> Int -> Int\n    shiftLeft = Native.Bitwise.shiftLeft\n    shiftRight : Int -> Int -> Int\n    shiftRight = Native.Bitwise.shiftRightArithmatic\n    shiftRightLogical : Int -> Int -> Int\n    shiftRightLogical = Native.Bitwise.shiftRightLogical\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"shiftRight"},[{"tag":"Span","contents":[{"line":58,"column":21},{"line":58,"column":49},{"doc":"Native.Bitwise.shiftRightArithmatic"}]},{"tag":"Var","contents":{"home":{"tag":"Module","contents":["Native","Bitwise"]},"name":"shiftRightArithmatic"}}],{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]}]}]],[{"tag":"None","contents":{"doc":"let and : Int -> Int -> Int\n    and = Native.Bitwise.and\n    or : Int -> Int -> Int\n    or = Native.Bitwise.or\n    xor : Int -> Int -> Int\n    xor = Native.Bitwise.xor\n    complement : Int -> Int\n    complement = Native.Bitwise.complement\n    shiftLeft : Int -> Int -> Int\n    shiftLeft = Native.Bitwise.shiftLeft\n    shiftRight : Int -> Int -> Int\n    shiftRight = Native.Bitwise.shiftRightArithmatic\n    shiftRightLogical : Int -> Int -> Int\n    shiftRightLogical = Native.Bitwise.shiftRightLogical\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"shiftLeft"},[{"tag":"Span","contents":[{"line":43,"column":20},{"line":43,"column":37},{"doc":"Native.Bitwise.shiftLeft"}]},{"tag":"Var","contents":{"home":{"tag":"Module","contents":["Native","Bitwise"]},"name":"shiftLeft"}}],{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]}]}]],[{"tag":"None","contents":{"doc":"let and : Int -> Int -> Int\n    and = Native.Bitwise.and\n    or : Int -> Int -> Int\n    or = Native.Bitwise.or\n    xor : Int -> Int -> Int\n    xor = Native.Bitwise.xor\n    complement : Int -> Int\n    complement = Native.Bitwise.complement\n    shiftLeft : Int -> Int -> Int\n    shiftLeft = Native.Bitwise.shiftLeft\n    shiftRight : Int -> Int -> Int\n    shiftRight = Native.Bitwise.shiftRightArithmatic\n    shiftRightLogical : Int -> Int -> Int\n    shiftRightLogical = Native.Bitwise.shiftRightLogical\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"complement"},[{"tag":"Span","contents":[{"line":34,"column":21},{"line":34,"column":39},{"doc":"Native.Bitwise.complement"}]},{"tag":"Var","contents":{"home":{"tag":"Module","contents":["Native","Bitwise"]},"name":"complement"}}],{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]}]],[{"tag":"None","contents":{"doc":"let and : Int -> Int -> Int\n    and = Native.Bitwise.and\n    or : Int -> Int -> Int\n    or = Native.Bitwise.or\n    xor : Int -> Int -> Int\n    xor = Native.Bitwise.xor\n    complement : Int -> Int\n    complement = Native.Bitwise.complement\n    shiftLeft : Int -> Int -> Int\n    shiftLeft = Native.Bitwise.shiftLeft\n    shiftRight : Int -> Int -> Int\n    shiftRight = Native.Bitwise.shiftRightArithmatic\n    shiftRightLogical : Int -> Int -> Int\n    shiftRightLogical = Native.Bitwise.shiftRightLogical\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"xor"},[{"tag":"Span","contents":[{"line":29,"column":14},{"line":29,"column":25},{"doc":"Native.Bitwise.xor"}]},{"tag":"Var","contents":{"home":{"tag":"Module","contents":["Native","Bitwise"]},"name":"xor"}}],{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]}]}]],[{"tag":"None","contents":{"doc":"let and : Int -> Int -> Int\n    and = Native.Bitwise.and\n    or : Int -> Int -> Int\n    or = Native.Bitwise.or\n    xor : Int -> Int -> Int\n    xor = Native.Bitwise.xor\n    complement : Int -> Int\n    complement = Native.Bitwise.complement\n    shiftLeft : Int -> Int -> Int\n    shiftLeft = Native.Bitwise.shiftLeft\n    shiftRight : Int -> Int -> Int\n    shiftRight = Native.Bitwise.shiftRightArithmatic\n    shiftRightLogical : Int -> Int -> Int\n    shiftRightLogical = Native.Bitwise.shiftRightLogical\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"or"},[{"tag":"Span","contents":[{"line":24,"column":13},{"line":24,"column":23},{"doc":"Native.Bitwise.or"}]},{"tag":"Var","contents":{"home":{"tag":"Module","contents":["Native","Bitwise"]},"name":"or"}}],{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]}]}]],[{"tag":"None","contents":{"doc":"let and : Int -> Int -> Int\n    and = Native.Bitwise.and\n    or : Int -> Int -> Int\n    or = Native.Bitwise.or\n    xor : Int -> Int -> Int\n    xor = Native.Bitwise.xor\n    complement : Int -> Int\n    complement = Native.Bitwise.complement\n    shiftLeft : Int -> Int -> Int\n    shiftLeft = Native.Bitwise.shiftLeft\n    shiftRight : Int -> Int -> Int\n    shiftRight = Native.Bitwise.shiftRightArithmatic\n    shiftRightLogical : Int -> Int -> Int\n    shiftRightLogical = Native.Bitwise.shiftRightLogical\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"and"},[{"tag":"Span","contents":[{"line":19,"column":14},{"line":19,"column":25},{"doc":"Native.Bitwise.and"}]},{"tag":"Var","contents":{"home":{"tag":"Module","contents":["Native","Bitwise"]},"name":"and"}}],{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]}]}]],[{"tag":"None","contents":{"doc":"_save_the_environment!!!"}},{"tag":"Var","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"_save_the_environment!!!"}}]]}]]}]]}]]}]]}]]}]]}],"ports":[]},"imports":[[["Native","Bitwise"],{"tag":"As","contents":"Native.Bitwise"}]],"names":["Bitwise"],"exports":[{"tag":"Value","contents":"and"},{"tag":"Value","contents":"or"},{"tag":"Value","contents":"xor"},{"tag":"Value","contents":"complement"},{"tag":"Value","contents":"shiftLeft"},{"tag":"Value","contents":"shiftRight"},{"tag":"Value","contents":"shiftRightLogical"}]}