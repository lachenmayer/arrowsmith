{"path":"","body":{"fixities":[],"aliases":{"Match":[[],{"tag":"Record","contents":[[["match",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}],["submatches",{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Maybe"]},"name":"Maybe"}},[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]]}]]}],["index",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}],["number",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]],null]}]},"datatypes":{"Regex":[[],[["Regex",[]]]],"HowMany":[[],[["All",[]],["AtMost",[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]]]]},"types":{"replace":{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"HowMany"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"Regex"}},{"tag":"Lambda","contents":[{"tag":"Lambda","contents":[{"tag":"Aliased","contents":[{"home":{"tag":"Module","contents":["Regex"]},"name":"Match"},{"tag":"Record","contents":[[["index",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}],["match",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}],["number",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}],["submatches",{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Maybe"]},"name":"Maybe"}},[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]]}]]}]],null]}]},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]}]}]}]},"split":{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"HowMany"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"Regex"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]]}]}]}]},"regex":{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}},{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"Regex"}}]},"Regex":{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"Regex"}},"::":{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"Var","contents":"a"}]]},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"Var","contents":"a"}]]}]}]},"escape":{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]},"All":{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"HowMany"}},"caseInsensitive":{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"Regex"}},{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"Regex"}}]},"find":{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"HowMany"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"Regex"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"Aliased","contents":[{"home":{"tag":"Module","contents":["Regex"]},"name":"Match"},{"tag":"Record","contents":[[["index",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}],["match",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}],["number",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}],["submatches",{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Maybe"]},"name":"Maybe"}},[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]]}]]}]],null]}]}]]}]}]}]},"AtMost":{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"HowMany"}}]},"contains":{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"Regex"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Bool"}}]}]},"Match":{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Maybe"]},"name":"Maybe"}},[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]]}]]},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Aliased","contents":[{"home":{"tag":"Module","contents":["Regex"]},"name":"Match"},{"tag":"Record","contents":[[["index",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}],["match",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}],["number",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}],["submatches",{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Maybe"]},"name":"Maybe"}},[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]]}]]}]],null]}]}]}]}]}]}},"program":[{"tag":"None","contents":{"doc":"let Regex : Regex.Regex\n    Regex = Regex\n    escape : String -> String\n    escape = Native.Regex.escape\n    regex : String -> Regex.Regex\n    regex = Native.Regex.regex\n    caseInsensitive : Regex.Regex -> Regex.Regex\n    caseInsensitive = Native.Regex.caseInsensitive\n    contains : Regex.Regex -> String -> Bool\n    contains = Native.Regex.contains\n    Match : String\n            -> List (Maybe.Maybe String) -> Int -> Int -> Regex.Match\n    Match = \\a b c d -> { match = a\n                        , submatches = b\n                        , index = c\n                        , number = d\n                        }\n    All : Regex.HowMany\n    All = All\n    AtMost : Int -> Regex.HowMany\n    AtMost = \\a -> AtMost a\n    find : Regex.HowMany -> Regex.Regex -> String -> List Regex.Match\n    find = Native.Regex.find\n    replace : Regex.HowMany\n              -> Regex.Regex -> (Regex.Match -> String) -> String -> String\n    replace = Native.Regex.replace\n    split : Regex.HowMany -> Regex.Regex -> String -> List String\n    split = Native.Regex.split\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"split"},[{"tag":"Span","contents":[{"line":123,"column":16},{"line":123,"column":27},{"doc":"Native.Regex.split"}]},{"tag":"Var","contents":{"home":{"tag":"Module","contents":["Native","Regex"]},"name":"split"}}],{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"HowMany"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"Regex"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]]}]}]}]}]],[{"tag":"None","contents":{"doc":"let Regex : Regex.Regex\n    Regex = Regex\n    escape : String -> String\n    escape = Native.Regex.escape\n    regex : String -> Regex.Regex\n    regex = Native.Regex.regex\n    caseInsensitive : Regex.Regex -> Regex.Regex\n    caseInsensitive = Native.Regex.caseInsensitive\n    contains : Regex.Regex -> String -> Bool\n    contains = Native.Regex.contains\n    Match : String\n            -> List (Maybe.Maybe String) -> Int -> Int -> Regex.Match\n    Match = \\a b c d -> { match = a\n                        , submatches = b\n                        , index = c\n                        , number = d\n                        }\n    All : Regex.HowMany\n    All = All\n    AtMost : Int -> Regex.HowMany\n    AtMost = \\a -> AtMost a\n    find : Regex.HowMany -> Regex.Regex -> String -> List Regex.Match\n    find = Native.Regex.find\n    replace : Regex.HowMany\n              -> Regex.Regex -> (Regex.Match -> String) -> String -> String\n    replace = Native.Regex.replace\n    split : Regex.HowMany -> Regex.Regex -> String -> List String\n    split = Native.Regex.split\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"replace"},[{"tag":"Span","contents":[{"line":114,"column":18},{"line":114,"column":31},{"doc":"Native.Regex.replace"}]},{"tag":"Var","contents":{"home":{"tag":"Module","contents":["Native","Regex"]},"name":"replace"}}],{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"HowMany"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"Regex"}},{"tag":"Lambda","contents":[{"tag":"Lambda","contents":[{"tag":"Aliased","contents":[{"home":{"tag":"Module","contents":["Regex"]},"name":"Match"},{"tag":"Record","contents":[[["match",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}],["submatches",{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Maybe"]},"name":"Maybe"}},[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]]}]]}],["index",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}],["number",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]],null]}]},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]}]}]}]}]],[{"tag":"None","contents":{"doc":"let Regex : Regex.Regex\n    Regex = Regex\n    escape : String -> String\n    escape = Native.Regex.escape\n    regex : String -> Regex.Regex\n    regex = Native.Regex.regex\n    caseInsensitive : Regex.Regex -> Regex.Regex\n    caseInsensitive = Native.Regex.caseInsensitive\n    contains : Regex.Regex -> String -> Bool\n    contains = Native.Regex.contains\n    Match : String\n            -> List (Maybe.Maybe String) -> Int -> Int -> Regex.Match\n    Match = \\a b c d -> { match = a\n                        , submatches = b\n                        , index = c\n                        , number = d\n                        }\n    All : Regex.HowMany\n    All = All\n    AtMost : Int -> Regex.HowMany\n    AtMost = \\a -> AtMost a\n    find : Regex.HowMany -> Regex.Regex -> String -> List Regex.Match\n    find = Native.Regex.find\n    replace : Regex.HowMany\n              -> Regex.Regex -> (Regex.Match -> String) -> String -> String\n    replace = Native.Regex.replace\n    split : Regex.HowMany -> Regex.Regex -> String -> List String\n    split = Native.Regex.split\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"find"},[{"tag":"Span","contents":[{"line":100,"column":15},{"line":100,"column":25},{"doc":"Native.Regex.find"}]},{"tag":"Var","contents":{"home":{"tag":"Module","contents":["Native","Regex"]},"name":"find"}}],{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"HowMany"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"Regex"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"Aliased","contents":[{"home":{"tag":"Module","contents":["Regex"]},"name":"Match"},{"tag":"Record","contents":[[["match",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}],["submatches",{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Maybe"]},"name":"Maybe"}},[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]]}]]}],["index",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}],["number",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]],null]}]}]]}]}]}]}]],[{"tag":"None","contents":{"doc":"let Regex : Regex.Regex\n    Regex = Regex\n    escape : String -> String\n    escape = Native.Regex.escape\n    regex : String -> Regex.Regex\n    regex = Native.Regex.regex\n    caseInsensitive : Regex.Regex -> Regex.Regex\n    caseInsensitive = Native.Regex.caseInsensitive\n    contains : Regex.Regex -> String -> Bool\n    contains = Native.Regex.contains\n    Match : String\n            -> List (Maybe.Maybe String) -> Int -> Int -> Regex.Match\n    Match = \\a b c d -> { match = a\n                        , submatches = b\n                        , index = c\n                        , number = d\n                        }\n    All : Regex.HowMany\n    All = All\n    AtMost : Int -> Regex.HowMany\n    AtMost = \\a -> AtMost a\n    find : Regex.HowMany -> Regex.Regex -> String -> List Regex.Match\n    find = Native.Regex.find\n    replace : Regex.HowMany\n              -> Regex.Regex -> (Regex.Match -> String) -> String -> String\n    replace = Native.Regex.replace\n    split : Regex.HowMany -> Regex.Regex -> String -> List String\n    split = Native.Regex.split\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"AtMost"},[{"tag":"None","contents":{"doc":"AtMost a"}},{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},[{"tag":"None","contents":{"doc":"AtMost a"}},{"tag":"Data","contents":["AtMost",[[{"tag":"None","contents":{"doc":"a"}},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"a"}}]]]}]]}],{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"HowMany"}},[]]}]}]],[{"tag":"None","contents":{"doc":"let Regex : Regex.Regex\n    Regex = Regex\n    escape : String -> String\n    escape = Native.Regex.escape\n    regex : String -> Regex.Regex\n    regex = Native.Regex.regex\n    caseInsensitive : Regex.Regex -> Regex.Regex\n    caseInsensitive = Native.Regex.caseInsensitive\n    contains : Regex.Regex -> String -> Bool\n    contains = Native.Regex.contains\n    Match : String\n            -> List (Maybe.Maybe String) -> Int -> Int -> Regex.Match\n    Match = \\a b c d -> { match = a\n                        , submatches = b\n                        , index = c\n                        , number = d\n                        }\n    All : Regex.HowMany\n    All = All\n    AtMost : Int -> Regex.HowMany\n    AtMost = \\a -> AtMost a\n    find : Regex.HowMany -> Regex.Regex -> String -> List Regex.Match\n    find = Native.Regex.find\n    replace : Regex.HowMany\n              -> Regex.Regex -> (Regex.Match -> String) -> String -> String\n    replace = Native.Regex.replace\n    split : Regex.HowMany -> Regex.Regex -> String -> List String\n    split = Native.Regex.split\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"All"},[{"tag":"None","contents":{"doc":"All"}},{"tag":"Data","contents":["All",[]]}],{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"HowMany"}},[]]}]],[{"tag":"None","contents":{"doc":"let Regex : Regex.Regex\n    Regex = Regex\n    escape : String -> String\n    escape = Native.Regex.escape\n    regex : String -> Regex.Regex\n    regex = Native.Regex.regex\n    caseInsensitive : Regex.Regex -> Regex.Regex\n    caseInsensitive = Native.Regex.caseInsensitive\n    contains : Regex.Regex -> String -> Bool\n    contains = Native.Regex.contains\n    Match : String\n            -> List (Maybe.Maybe String) -> Int -> Int -> Regex.Match\n    Match = \\a b c d -> { match = a\n                        , submatches = b\n                        , index = c\n                        , number = d\n                        }\n    All : Regex.HowMany\n    All = All\n    AtMost : Int -> Regex.HowMany\n    AtMost = \\a -> AtMost a\n    find : Regex.HowMany -> Regex.Regex -> String -> List Regex.Match\n    find = Native.Regex.find\n    replace : Regex.HowMany\n              -> Regex.Regex -> (Regex.Match -> String) -> String -> String\n    replace = Native.Regex.replace\n    split : Regex.HowMany -> Regex.Regex -> String -> List String\n    split = Native.Regex.split\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"Match"},[{"tag":"None","contents":{"doc":"{ match = a, submatches = b, index = c, number = d }"}},{"tag":"Lambda","contents":[{"tag":"Var","contents":"a"},[{"tag":"None","contents":{"doc":"{ match = a, submatches = b, index = c, number = d }"}},{"tag":"Lambda","contents":[{"tag":"Var","contents":"b"},[{"tag":"None","contents":{"doc":"{ match = a, submatches = b, index = c, number = d }"}},{"tag":"Lambda","contents":[{"tag":"Var","contents":"c"},[{"tag":"None","contents":{"doc":"{ match = a, submatches = b, index = c, number = d }"}},{"tag":"Lambda","contents":[{"tag":"Var","contents":"d"},[{"tag":"None","contents":{"doc":"{ match = a, submatches = b, index = c, number = d }"}},{"tag":"Record","contents":[["match",[{"tag":"None","contents":{"doc":"a"}},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"a"}}]],["submatches",[{"tag":"None","contents":{"doc":"b"}},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"b"}}]],["index",[{"tag":"None","contents":{"doc":"c"}},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"c"}}]],["number",[{"tag":"None","contents":{"doc":"d"}},{"tag":"Var","contents":{"home":{"tag":"Local","contents":[]},"name":"d"}}]]]}]]}]]}]]}]]}],{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}},{"tag":"Lambda","contents":[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Maybe"]},"name":"Maybe"}},[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]]}]]},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}},{"tag":"Aliased","contents":[{"home":{"tag":"Module","contents":["Regex"]},"name":"Match"},{"tag":"Record","contents":[[["match",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}],["submatches",{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"List"}},[{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Maybe"]},"name":"Maybe"}},[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]]}]]}],["index",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}],["number",{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Int"}}]],null]}]}]}]}]}]}]],[{"tag":"None","contents":{"doc":"let Regex : Regex.Regex\n    Regex = Regex\n    escape : String -> String\n    escape = Native.Regex.escape\n    regex : String -> Regex.Regex\n    regex = Native.Regex.regex\n    caseInsensitive : Regex.Regex -> Regex.Regex\n    caseInsensitive = Native.Regex.caseInsensitive\n    contains : Regex.Regex -> String -> Bool\n    contains = Native.Regex.contains\n    Match : String\n            -> List (Maybe.Maybe String) -> Int -> Int -> Regex.Match\n    Match = \\a b c d -> { match = a\n                        , submatches = b\n                        , index = c\n                        , number = d\n                        }\n    All : Regex.HowMany\n    All = All\n    AtMost : Int -> Regex.HowMany\n    AtMost = \\a -> AtMost a\n    find : Regex.HowMany -> Regex.Regex -> String -> List Regex.Match\n    find = Native.Regex.find\n    replace : Regex.HowMany\n              -> Regex.Regex -> (Regex.Match -> String) -> String -> String\n    replace = Native.Regex.replace\n    split : Regex.HowMany -> Regex.Regex -> String -> List String\n    split = Native.Regex.split\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"contains"},[{"tag":"Span","contents":[{"line":55,"column":19},{"line":55,"column":33},{"doc":"Native.Regex.contains"}]},{"tag":"Var","contents":{"home":{"tag":"Module","contents":["Native","Regex"]},"name":"contains"}}],{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"Regex"}},{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"Bool"}}]}]}]],[{"tag":"None","contents":{"doc":"let Regex : Regex.Regex\n    Regex = Regex\n    escape : String -> String\n    escape = Native.Regex.escape\n    regex : String -> Regex.Regex\n    regex = Native.Regex.regex\n    caseInsensitive : Regex.Regex -> Regex.Regex\n    caseInsensitive = Native.Regex.caseInsensitive\n    contains : Regex.Regex -> String -> Bool\n    contains = Native.Regex.contains\n    Match : String\n            -> List (Maybe.Maybe String) -> Int -> Int -> Regex.Match\n    Match = \\a b c d -> { match = a\n                        , submatches = b\n                        , index = c\n                        , number = d\n                        }\n    All : Regex.HowMany\n    All = All\n    AtMost : Int -> Regex.HowMany\n    AtMost = \\a -> AtMost a\n    find : Regex.HowMany -> Regex.Regex -> String -> List Regex.Match\n    find = Native.Regex.find\n    replace : Regex.HowMany\n              -> Regex.Regex -> (Regex.Match -> String) -> String -> String\n    replace = Native.Regex.replace\n    split : Regex.HowMany -> Regex.Regex -> String -> List String\n    split = Native.Regex.split\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"caseInsensitive"},[{"tag":"Span","contents":[{"line":44,"column":26},{"line":44,"column":47},{"doc":"Native.Regex.caseInsensitive"}]},{"tag":"Var","contents":{"home":{"tag":"Module","contents":["Native","Regex"]},"name":"caseInsensitive"}}],{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"Regex"}},{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"Regex"}}]}]],[{"tag":"None","contents":{"doc":"let Regex : Regex.Regex\n    Regex = Regex\n    escape : String -> String\n    escape = Native.Regex.escape\n    regex : String -> Regex.Regex\n    regex = Native.Regex.regex\n    caseInsensitive : Regex.Regex -> Regex.Regex\n    caseInsensitive = Native.Regex.caseInsensitive\n    contains : Regex.Regex -> String -> Bool\n    contains = Native.Regex.contains\n    Match : String\n            -> List (Maybe.Maybe String) -> Int -> Int -> Regex.Match\n    Match = \\a b c d -> { match = a\n                        , submatches = b\n                        , index = c\n                        , number = d\n                        }\n    All : Regex.HowMany\n    All = All\n    AtMost : Int -> Regex.HowMany\n    AtMost = \\a -> AtMost a\n    find : Regex.HowMany -> Regex.Regex -> String -> List Regex.Match\n    find = Native.Regex.find\n    replace : Regex.HowMany\n              -> Regex.Regex -> (Regex.Match -> String) -> String -> String\n    replace = Native.Regex.replace\n    split : Regex.HowMany -> Regex.Regex -> String -> List String\n    split = Native.Regex.split\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"regex"},[{"tag":"Span","contents":[{"line":39,"column":16},{"line":39,"column":27},{"doc":"Native.Regex.regex"}]},{"tag":"Var","contents":{"home":{"tag":"Module","contents":["Native","Regex"]},"name":"regex"}}],{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}},{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"Regex"}}]}]],[{"tag":"None","contents":{"doc":"let Regex : Regex.Regex\n    Regex = Regex\n    escape : String -> String\n    escape = Native.Regex.escape\n    regex : String -> Regex.Regex\n    regex = Native.Regex.regex\n    caseInsensitive : Regex.Regex -> Regex.Regex\n    caseInsensitive = Native.Regex.caseInsensitive\n    contains : Regex.Regex -> String -> Bool\n    contains = Native.Regex.contains\n    Match : String\n            -> List (Maybe.Maybe String) -> Int -> Int -> Regex.Match\n    Match = \\a b c d -> { match = a\n                        , submatches = b\n                        , index = c\n                        , number = d\n                        }\n    All : Regex.HowMany\n    All = All\n    AtMost : Int -> Regex.HowMany\n    AtMost = \\a -> AtMost a\n    find : Regex.HowMany -> Regex.Regex -> String -> List Regex.Match\n    find = Native.Regex.find\n    replace : Regex.HowMany\n              -> Regex.Regex -> (Regex.Match -> String) -> String -> String\n    replace = Native.Regex.replace\n    split : Regex.HowMany -> Regex.Regex -> String -> List String\n    split = Native.Regex.split\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"escape"},[{"tag":"Span","contents":[{"line":30,"column":17},{"line":30,"column":29},{"doc":"Native.Regex.escape"}]},{"tag":"Var","contents":{"home":{"tag":"Module","contents":["Native","Regex"]},"name":"escape"}}],{"tag":"Lambda","contents":[{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}},{"tag":"Type","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"String"}}]}]],[{"tag":"None","contents":{"doc":"let Regex : Regex.Regex\n    Regex = Regex\n    escape : String -> String\n    escape = Native.Regex.escape\n    regex : String -> Regex.Regex\n    regex = Native.Regex.regex\n    caseInsensitive : Regex.Regex -> Regex.Regex\n    caseInsensitive = Native.Regex.caseInsensitive\n    contains : Regex.Regex -> String -> Bool\n    contains = Native.Regex.contains\n    Match : String\n            -> List (Maybe.Maybe String) -> Int -> Int -> Regex.Match\n    Match = \\a b c d -> { match = a\n                        , submatches = b\n                        , index = c\n                        , number = d\n                        }\n    All : Regex.HowMany\n    All = All\n    AtMost : Int -> Regex.HowMany\n    AtMost = \\a -> AtMost a\n    find : Regex.HowMany -> Regex.Regex -> String -> List Regex.Match\n    find = Native.Regex.find\n    replace : Regex.HowMany\n              -> Regex.Regex -> (Regex.Match -> String) -> String -> String\n    replace = Native.Regex.replace\n    split : Regex.HowMany -> Regex.Regex -> String -> List String\n    split = Native.Regex.split\nin _save_the_environment!!!"}},{"tag":"Let","contents":[[[{"tag":"Var","contents":"Regex"},[{"tag":"None","contents":{"doc":"Regex"}},{"tag":"Data","contents":["Regex",[]]}],{"tag":"App","contents":[{"tag":"Type","contents":{"home":{"tag":"Module","contents":["Regex"]},"name":"Regex"}},[]]}]],[{"tag":"None","contents":{"doc":"_save_the_environment!!!"}},{"tag":"Var","contents":{"home":{"tag":"BuiltIn","contents":[]},"name":"_save_the_environment!!!"}}]]}]]}]]}]]}]]}]]}]]}]]}]]}]]}]]}],"ports":[]},"imports":[[["Maybe"],{"tag":"Open","contents":{"_explicits":[{"tag":"Alias","contents":"Maybe"}],"_open":false}}],[["Native","Regex"],{"tag":"As","contents":"Native.Regex"}]],"names":["Regex"],"exports":[{"tag":"Union","contents":["Regex",{"_explicits":["Regex"],"_open":false}]},{"tag":"Value","contents":"escape"},{"tag":"Value","contents":"regex"},{"tag":"Value","contents":"caseInsensitive"},{"tag":"Value","contents":"contains"},{"tag":"Alias","contents":"Match"},{"tag":"Value","contents":"Match"},{"tag":"Union","contents":["HowMany",{"_explicits":["All","AtMost"],"_open":false}]},{"tag":"Value","contents":"find"},{"tag":"Value","contents":"replace"},{"tag":"Value","contents":"split"}]}