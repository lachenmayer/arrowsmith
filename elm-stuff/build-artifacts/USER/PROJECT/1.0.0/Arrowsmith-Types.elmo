Elm.Arrowsmith = Elm.Arrowsmith || {};
Elm.Arrowsmith.Types = Elm.Arrowsmith.Types || {};
Elm.Arrowsmith.Types.make = function (_elm) {
   "use strict";
   _elm.Arrowsmith = _elm.Arrowsmith || {};
   _elm.Arrowsmith.Types = _elm.Arrowsmith.Types || {};
   if (_elm.Arrowsmith.Types.values)
   return _elm.Arrowsmith.Types.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Arrowsmith.Types",
   $Dict = Elm.Dict.make(_elm),
   $Maybe = Elm.Maybe.make(_elm);
   var CompilationFailed = function (a) {
      return {ctor: "CompilationFailed"
             ,_0: a};
   };
   var ModuleCompiled = function (a) {
      return {ctor: "ModuleCompiled"
             ,_0: a};
   };
   var RemoveDefinition = function (a) {
      return {ctor: "RemoveDefinition"
             ,_0: a};
   };
   var NewDefinition = {ctor: "NewDefinition"};
   var FinishEvaluating = function (a) {
      return {ctor: "FinishEvaluating"
             ,_0: a};
   };
   var Evaluate = function (a) {
      return {ctor: "Evaluate"
             ,_0: a};
   };
   var FinishEditing = function (a) {
      return {ctor: "FinishEditing"
             ,_0: a};
   };
   var StopEditing = function (a) {
      return {ctor: "StopEditing"
             ,_0: a};
   };
   var Edit = function (a) {
      return {ctor: "Edit",_0: a};
   };
   var NoOp = {ctor: "NoOp"};
   var State = F8(function (a,
   b,
   c,
   d,
   e,
   f,
   g,
   h) {
      return {_: {}
             ,compileStatus: c
             ,editing: e
             ,fresh: h
             ,isCompiling: b
             ,modul: a
             ,synced: d
             ,toEvaluate: g
             ,values: f};
   });
   var CompileError = function (a) {
      return {ctor: "CompileError"
             ,_0: a};
   };
   var Compiled = {ctor: "Compiled"};
   var Module = F4(function (a,
   b,
   c,
   d) {
      return {_: {}
             ,adts: c
             ,defs: d
             ,imports: b
             ,name: a};
   });
   _elm.Arrowsmith.Types.values = {_op: _op
                                  ,Module: Module
                                  ,Compiled: Compiled
                                  ,CompileError: CompileError
                                  ,State: State
                                  ,NoOp: NoOp
                                  ,Edit: Edit
                                  ,StopEditing: StopEditing
                                  ,FinishEditing: FinishEditing
                                  ,Evaluate: Evaluate
                                  ,FinishEvaluating: FinishEvaluating
                                  ,NewDefinition: NewDefinition
                                  ,RemoveDefinition: RemoveDefinition
                                  ,ModuleCompiled: ModuleCompiled
                                  ,CompilationFailed: CompilationFailed};
   return _elm.Arrowsmith.Types.values;
};